Reverse AWSTAPE utility

This utility converts an AWS type file back to a blocked
OS dataset, such that the original blocking is restored.

As an AWS file does not contain DCB parameters,
this utility will ++NOT++ restore the original DCB
parameters, these will have to be added manually with
an utility such as IEBGENER.



Usage:

Upload AWS file to OS/390 or z/OS in binary format,
do no use cr/lf or any other blocking feature, when
doing filetransfer.

Upload to a RECFM=U dataset, either pre-allocated,
or allocated using IND$FILE.  BLKSIZE=4096 is reasonable,
but any other blocksize will do.

An AWS tape file can consist of more then 1 file, and as such
the filenumber of the tape must be specifed.  This filenumber
is equal to the value used when reading a tape with bypass
label processing (BLP). Thus, on a labeled tape file 1 will
always be the VOL1 record.

Run rawstape with SYSUT1 pointing to AWS input file, and
SYSUT2 to the output file, for example copying a
standalone dump tape:

//CONVERT  EXEC PGM=RAWSTAPE,PARM=3
//STEPLIB  DD  DSN=IBMUSER.LOAD,DISP=SHR
//SYSUDUMP DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=IBMUSER.SADUMP.AWS
//SYSUT2   DD  DSN=IBMUSER.SADUMP,DISP=(NEW,CATLG),
//          UNIT=SYSALLDA,SPACE=(TRK,1200,RLSE)

After which the IBMUSER.SADUMP contains the correct data, but
still has invalid DCB parameters in the DSCB, these can be
corrected with IEBGENER as following:

//SETDCB   EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,
//          DCB=(DSORG=PS,RECFM=FBS,LRECL=4160,BLKSIZE=29120)  <===
//SYSUT2   DD  DISP=MOD,DCB=(*.SYSUT1),DSN=IBMUSER.SADUMP

Please note the DCB parameter, you will need to set this
to the right DCB parameters for the dataset you are restoring.



Sample job to Assemble and link-edit RAWSTAPE:

//ASMA90   EXEC PGM=ASMA90,PARM='DECK,NOOBJ,XREF(SHORT)'
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,10)
//SYSPUNCH DD  DSN=&&PUNCH,DISP=(NEW,PASS),
//          UNIT=SYSALLDA,SPACE=(CYL,10)
//SYSIN    DD  DISP=SHR,DSN=IBMUSER.SOURCE(RAWSTAPE)   <===
//IEWL     EXEC PGM=IEWL
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,10)
//SYSLMOD  DD  DSN=IBMUSER.LOAD(RAWSTAPE),DISP=SHR   <===
//SYSLIN   DD  DSN=&&PUNCH,DISP=(OLD,DELETE)

